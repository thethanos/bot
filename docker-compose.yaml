version: '3'

services:
  webapp:
    build:
      context: .
      dockerfile: docker/webapp.Dockerfile
      image: webapp:latest
      container_name: webapp
      restart: always
      depends_on:
        data_server:
          condition: service_healthy
        ports:
          - 444:444
  data_server:
    build:
      context: .
      dockerfile: docker/data_server.Dockerfile
    image: data_server:latest
    container_name: data_server
    restart: always
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /home/multimessenger_bot
      - /home/images:/multimessenger_bot/webapp/pages/images
    ports:
      - 80:80
  bot:
    build: 
      context: .
      dockerfile: docker/bot.Dockerfile
    image: bot:latest
    container_name: bot
    restart: always
    depends_on:
      db:
        condition: service_healthy
      data_server:
  db:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "admin"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s 
    volumes:
      - pgdata:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - 8080:80
volumes:
  pgdata: